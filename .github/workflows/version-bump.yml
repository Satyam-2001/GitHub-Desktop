name: Version Bump

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version type to bump'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      create_tag:
        description: 'Create a tag after version bump'
        required: true
        default: true
        type: boolean

jobs:
  bump-version:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # Need full history for changelog generation

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump_version
        run: |
          # Bump version based on input
          case "${{ inputs.version_type }}" in
            major)
              npm version major --no-git-tag-version
              ;;
            minor)
              npm version minor --no-git-tag-version
              ;;
            patch)
              npm version patch --no-git-tag-version
              ;;
          esac

          # Get new version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update CHANGELOG
        run: |
          cat > CHANGELOG_ENTRY.md << EOF
          ## [v${{ steps.bump_version.outputs.NEW_VERSION }}] - $(date +%Y-%m-%d)

          ### Added
          - Multi-account support with secure authentication
          - GitHub Desktop-style UI components
          - Advanced Git operations via context menus

          ### Changed
          - Improved authentication handling for push/pull operations
          - Enhanced diff viewer integration
          - Optimized performance for large repositories

          ### Fixed
          - Authentication issues with GitHub tokens
          - Commit panel display in active editor
          - Account switching synchronization

          EOF

          # Prepend to CHANGELOG if it exists, or create it
          if [ -f CHANGELOG.md ]; then
            cat CHANGELOG.md >> CHANGELOG_ENTRY.md
            mv CHANGELOG_ENTRY.md CHANGELOG.md
          else
            echo "# Changelog" > CHANGELOG.md
            echo "" >> CHANGELOG.md
            cat CHANGELOG_ENTRY.md >> CHANGELOG.md
            rm CHANGELOG_ENTRY.md
          fi

      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: bump version to v${{ steps.bump_version.outputs.NEW_VERSION }}"
          title: "Release: v${{ steps.bump_version.outputs.NEW_VERSION }}"
          body: |
            ## ðŸš€ Release v${{ steps.bump_version.outputs.NEW_VERSION }}

            This PR bumps the version from `v${{ steps.current_version.outputs.CURRENT_VERSION }}` to `v${{ steps.bump_version.outputs.NEW_VERSION }}`.

            ### Changes
            - Version bumped in `package.json`
            - Updated `CHANGELOG.md` with release notes

            ### Next Steps
            1. Review and merge this PR
            2. A tag will be automatically created if enabled
            3. The release workflow will trigger on tag push

            ---
            *This PR was automatically created by the Version Bump workflow*
          branch: release/v${{ steps.bump_version.outputs.NEW_VERSION }}
          delete-branch: true
          labels: |
            release
            automated

      - name: Create tag (if requested)
        if: inputs.create_tag == true && steps.create_pr.outputs.pull-request-operation != 'created'
        run: |
          git tag -a "v${{ steps.bump_version.outputs.NEW_VERSION }}" -m "Release v${{ steps.bump_version.outputs.NEW_VERSION }}"
          git push origin "v${{ steps.bump_version.outputs.NEW_VERSION }}"